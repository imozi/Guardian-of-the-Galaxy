version: "3.9"

services:
    gotg_frontend:
        container_name: gotg_frontend
        image: gotg_frontend
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
              CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports: 
          - ${CLIENT_PORT}:3000
        environment:
          - CLIENT_PORT=${CLIENT_PORT}
          - SERVER_PORT=${SERVER_PORT}
        depends_on:
            - gotg_backend

    gotg_backend:
        container_name: gotg_backend
        image: gotg_backend
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports: 
          - ${SERVER_PORT}:3001
        environment:
          SERVER_PORT: ${SERVER_PORT}
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_PORT: ${POSTGRES_PORT}
          POSTGRES_HOST: ${POSTGRES_HOST}
        depends_on:
            gotg_db:
              condition: service_healthy
        
    gotg_db:
      container_name: gotg_db
      image: postgres:14-alpine     
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5

